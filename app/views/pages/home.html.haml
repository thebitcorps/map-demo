!!!
%html
	%head
		%title Loretta
		%meta{:charset => "utf-8"}/
		%meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
		%link{:href => "http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css", :rel => "stylesheet"}/
		:css
			body { margin:0; padding:0; }
			#map { position:absolute; top:0; bottom:0; width:100%; }
	%body{onresize: "onClickLot(currentIndex)"}

		#map
		%script{:src => "http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"}

		:javascript
			// -------------------- Basic Map ------------------------------- /
			var map = L.map('map').setView([21.906, -102.33], 18);

			L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw', {
				maxZoom: 20,
				minZoom: 1,
				id: 'mapbox.streets'
			}).addTo(map);

			function style(feature) {
				return {
					weight: 1.5,
					opacity: 1,
					color: '#4dff4d',
					dashArray: '2',
					fillOpacity: 0.8,
					fillColor: (feature.properties.status == 'available' ? "#b3ffb3" : '#ffffb3')
				};
			}

			// --------------- Reques for terrains status ----------------------- /
			$.ajax(
			{
				type: "GET", //rest Type
				dataType: 'json', //mispelled
				url: "/lots.json",
				async: true,
				contentType: "application/json; charset=utf-8",
				success: function (msg)
				{

					for (index = 0; index < msg.length; ++index)
					{

						tearrainsData.features[parseInt(msg[index].id) - 1].properties = msg[index];
					}
					geojson = L.geoJson(tearrainsData, { style: style, onEachFeature: onEachFeature}).addTo(map);
				}
			});

			// -------------------- Shapes Intraction ---------------------------- //

			var currentIndex;

			function highlightFeature(e)
			{
				var layer = e.target;

				layer.setStyle({
					weight: 4,
					color: '#4dff4d',
					dashArray: '',
					fillColor: '#4dff4d'
				});

				if (!L.Browser.ie && !L.Browser.opera)
					layer.bringToFront();
			}

			function resetHighlight(e)
			{
				geojson.resetStyle(e.target);
			}

			function zoomToFeature(e)
			{
				//map.fitBounds(e.target.getBounds());

				// Mejor si aqui el modal
				ReactDOM.render(React.createElement(LotModal),document.getElementById("mod"));
				currentIndex = tearrainsData.features.indexOf(e.target.feature);
				onClickLot(currentIndex);
			}


			function onClickLot(number)
			{
				var lot = lots[number];
				var side = sides[number];
				var numbers = sidesNumbers[number];

				var maxX = 0, maxY = 0;

				lot.forEach(function(entry)
				{
					if(Math.abs(entry[0]) > maxX) maxX = Math.abs(entry[0]);
					if(Math.abs(entry[1]) > maxY) maxY = Math.abs(entry[1]);
				});

				var canvas = document.getElementById("canvas");
				var div = document.getElementById("modal-div");
				var ctx = canvas.getContext("2d");

				var width = div.clientWidth;
				var height = div.clientHeight;

				var fixed;

				if(width > height)
				{
					if(maxX > maxY)
					{
						if(maxY * width > height)
							fixed = height / maxY * 0.4;
						else
							fixed = width * 0.4;
					}
					else
					{
						if(maxX * Height > width)
							fixed = width / maxX * 0.4;
						else
							fixed = height * 0.4;
					}
				}
				else
				{
					if(maxY > maxX)
					{
						if(maxX * height > width)
							fixed = width / maxX * 0.4;
						else
							fixed = height * 0.4;
					}
					else
					{
						if(maxY * width > height)
							fixed = height / maxY * 0.4;
						else
							fixed = width * 0.4;
					}
				}

				canvas.width = width;
				canvas.height = height;

				ctx.fillStyle = "#b3ffb3";

				ctx.beginPath();
				lot.forEach(function(entry)
				{
					ctx.lineTo(entry[0] * fixed + width / 2, -entry[1] * fixed + height / 2);
				});
				ctx.closePath();
				ctx.fill();

				ctx.fillStyle = "#153015";
				ctx.font = "bold 16px Arial";
				ctx.textAlign = "center";
				for (i = 0; i < numbers.length; i++)
				{
					ctx.fillText(numbers[i] + "m", side[i][0] * fixed + width / 2, -side[i][1] * fixed + height / 2);
				}
				ctx.fillText(tearrainsData.features[number].properties.square_meters + "m" + String.fromCharCode(178), width / 2, height / 2);
			}


			function onEachFeature(feature, layer)
			{
				layer.on({
					mouseover: highlightFeature,
					mouseout: resetHighlight,
					click: zoomToFeature
				});

				//var popupContent = '<div style = "text-align: center;"><p>Informacion basica del terreno</p></div><div style = "text-align: left;"><p>Bloque: <b>' + feature.properties.stage + '</b></p><p>Lote: <b>'+ feature.properties.number +'</b></p><p>Area: <b>' + feature.properties.square_meters + ' m<sup>2</sup></b></p><p>' + (feature.properties.status == "available" ? 'Dispoible' : 'Vendido') + '</p></div><div style = "text-align: center;"><button onCLick="onClickLot(' + tearrainsData.features.indexOf(feature) + ')">Ver detalles</a></div>';

				//layer.bindPopup(popupContent);
			}

			// -------------------- Initial stuff ------------------------------- //

			var logoCoordX = -102.3297, logoCoordY = 21.90705;
			var offset = 0.00037;

			L.imageOverlay( "http://www.loretta.mx/images/logo-l.png", [[logoCoordY + offset, logoCoordX - offset], [logoCoordY - offset, logoCoordX + offset]]).addTo(map);

			L.multiPolygon(baseStreet, {weight: 1, color: '#333333', dashArray: '1', fillColor: '#333333', fillOpacity: 0.1}).addTo(map);

			map.fitBounds([[logoCoordY, logoCoordX - offset], [logoCoordY - 0.002, logoCoordX + offset]]);

		#mod
